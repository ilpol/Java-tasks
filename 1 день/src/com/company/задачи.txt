Реализовать ф-цию. Параметр weekday принимает true, если сейчас будний день иначе выходные. Параметр vacation говорит, что мы в отпуске.
public boolean sleepIn(boolean weekday, boolean vacation)

sleepIn(false, false) -> true
sleepIn(true, false) -> false
sleepIn(false, true) -> true

=============================
Реализовать ф-цию. Вернуть сумму чисел a и b, если они не равны. Иначе вернуть двойную сумму этих чисел.
public int sumDouble(int a, int b)

sumDouble(1, 2) -> 3
sumDouble(3, 2) -> 5
sumDouble(2, 2) -> 8

=============================
Реализовать ф-цию. Вернуть строку, которая состоит из пар индексов 0,1, 4,5, 8,9 и т.д.
public String altPairs(String str)

altPairs("kitten") -> "kien"
altPairs("Chocolate") -> "Chole"
altPairs("CodingHorror") -> "Congrr"

=============================
Задача повышенной сложности:
Реализовать метод, который принимает String в качестве аргумента. В аргемент будет передана "многострочная" строка. Напомню, что символ конца строки - '\n'.
В первой строке через пробел записаны три целых числа n, m [1, 1000] - количество строк и столбцов матрицы, k [1, 50_000] - кол-во запросов.
В следующих n строках записаны по m чисел через пробел. Кажое число [1, 10^6]. 
В следующих k строках записаны запросы в формате: один символ "c", "r" или "g", пробел, два целых числа через пробел. (напрмер "с 2 3")
Первый символ обозначает тип запроса: 
"c" - запрос на обмен столбцов, заданных двумя следующими числами, 
"r" - запрос на обмен строк заданных двумя следующими числами,
"g" - запрос на получение числа. Два следующих числа в строке обозначают номер строки и столбца, откуда ожидаем число.
Нумерация строк и столбцов начинается с 1.
Гарантируется, что все запросы корректны (не требуется доп. проверки на корректность входных данных).
Требуется вывести числа, определенные запросами g, каждое с новой строки. 
Ограничение по времени выполнения: 5с.

Пример входных данных #1:
3 3 5 //Кол-во столбцов матрицы 3, кол-во строк матрицы - 3, после отпределения матрицы будет 5 запросов.
1 2 3 //Строка 1
4 5 6 //Строка 2
7 8 9 //Строка 3
g 3 2 //Взять данные из 3 строки и 2-го столбца
r 3 2 //Поменять местами строки 3 и 2
c 2 3 //Поменять местами столбцы 2 и 3
g 2 2 //Взять данные из 2 строки и 2 столбца
g 3 2 //Взять данные из 3 строки и 2 столбца

Пример выходных данных #1:
8
9
6

Пример входных данных #2:
2 3 3
1 2 4
3 1 5
c 2 1
r 1 2
g 1 3

Пример выходных данных #2:
5